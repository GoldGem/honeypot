import { Injector } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export interface CallbackOptions {
    callback?: () => any;
    ctx?: any;
}
export interface CommonOptions extends CallbackOptions {
    params?: any;
    title?: any;
}
export interface HitOptions extends CommonOptions {
    referer?: string;
}
export declare class Metrika {
    private defaultCounterId;
    private counterConfigs;
    private positionToId;
    static getCounterNameById(id: string | number): string;
    static getCounterById(id: any): any;
    constructor(injector: Injector);
    addFileExtension(extensions: string | string[], counterPosition?: number): Promise<void>;
    extLink(url: string, options?: CommonOptions, counterPosition?: number): Promise<any>;
    file(url: string, options?: HitOptions, counterPosition?: number): Promise<any>;
    getClientID(counterPosition?: number): string;
    setUserID(userId: string, counterPosition?: number): Promise<any>;
    userParams(params: any, counterPosition?: number): Promise<any>;
    params(params: any, counterPosition?: number): Promise<any>;
    replacePhones(counterPosition?: number): Promise<any>;
    notBounce(options?: CallbackOptions, counterPosition?: number): Promise<any>;
    fireEvent(type: string, options?: CommonOptions, counterPosition?: number): Promise<any>;
    hit(url: string, options?: HitOptions, counterPosition?: number): Promise<any>;
    private getCallbackPromise;
    private counterIsLoaded;
    private getCounterByPosition;
    private getCounterIdByPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Metrika>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<Metrika>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcteWFuZGV4LW1ldHJpa2Euc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJuZy15YW5kZXgtbWV0cmlrYS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBpbnRlcmZhY2UgQ2FsbGJhY2tPcHRpb25zIHtcbiAgICBjYWxsYmFjaz86ICgpID0+IGFueTtcbiAgICBjdHg/OiBhbnk7XG59XG5leHBvcnQgaW50ZXJmYWNlIENvbW1vbk9wdGlvbnMgZXh0ZW5kcyBDYWxsYmFja09wdGlvbnMge1xuICAgIHBhcmFtcz86IGFueTtcbiAgICB0aXRsZT86IGFueTtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSGl0T3B0aW9ucyBleHRlbmRzIENvbW1vbk9wdGlvbnMge1xuICAgIHJlZmVyZXI/OiBzdHJpbmc7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNZXRyaWthIHtcbiAgICBwcml2YXRlIGRlZmF1bHRDb3VudGVySWQ7XG4gICAgcHJpdmF0ZSBjb3VudGVyQ29uZmlncztcbiAgICBwcml2YXRlIHBvc2l0aW9uVG9JZDtcbiAgICBzdGF0aWMgZ2V0Q291bnRlck5hbWVCeUlkKGlkOiBzdHJpbmcgfCBudW1iZXIpOiBzdHJpbmc7XG4gICAgc3RhdGljIGdldENvdW50ZXJCeUlkKGlkOiBhbnkpOiBhbnk7XG4gICAgY29uc3RydWN0b3IoaW5qZWN0b3I6IEluamVjdG9yKTtcbiAgICBhZGRGaWxlRXh0ZW5zaW9uKGV4dGVuc2lvbnM6IHN0cmluZyB8IHN0cmluZ1tdLCBjb3VudGVyUG9zaXRpb24/OiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+O1xuICAgIGV4dExpbmsodXJsOiBzdHJpbmcsIG9wdGlvbnM/OiBDb21tb25PcHRpb25zLCBjb3VudGVyUG9zaXRpb24/OiBudW1iZXIpOiBQcm9taXNlPGFueT47XG4gICAgZmlsZSh1cmw6IHN0cmluZywgb3B0aW9ucz86IEhpdE9wdGlvbnMsIGNvdW50ZXJQb3NpdGlvbj86IG51bWJlcik6IFByb21pc2U8YW55PjtcbiAgICBnZXRDbGllbnRJRChjb3VudGVyUG9zaXRpb24/OiBudW1iZXIpOiBzdHJpbmc7XG4gICAgc2V0VXNlcklEKHVzZXJJZDogc3RyaW5nLCBjb3VudGVyUG9zaXRpb24/OiBudW1iZXIpOiBQcm9taXNlPGFueT47XG4gICAgdXNlclBhcmFtcyhwYXJhbXM6IGFueSwgY291bnRlclBvc2l0aW9uPzogbnVtYmVyKTogUHJvbWlzZTxhbnk+O1xuICAgIHBhcmFtcyhwYXJhbXM6IGFueSwgY291bnRlclBvc2l0aW9uPzogbnVtYmVyKTogUHJvbWlzZTxhbnk+O1xuICAgIHJlcGxhY2VQaG9uZXMoY291bnRlclBvc2l0aW9uPzogbnVtYmVyKTogUHJvbWlzZTxhbnk+O1xuICAgIG5vdEJvdW5jZShvcHRpb25zPzogQ2FsbGJhY2tPcHRpb25zLCBjb3VudGVyUG9zaXRpb24/OiBudW1iZXIpOiBQcm9taXNlPGFueT47XG4gICAgZmlyZUV2ZW50KHR5cGU6IHN0cmluZywgb3B0aW9ucz86IENvbW1vbk9wdGlvbnMsIGNvdW50ZXJQb3NpdGlvbj86IG51bWJlcik6IFByb21pc2U8YW55PjtcbiAgICBoaXQodXJsOiBzdHJpbmcsIG9wdGlvbnM/OiBIaXRPcHRpb25zLCBjb3VudGVyUG9zaXRpb24/OiBudW1iZXIpOiBQcm9taXNlPGFueT47XG4gICAgcHJpdmF0ZSBnZXRDYWxsYmFja1Byb21pc2U7XG4gICAgcHJpdmF0ZSBjb3VudGVySXNMb2FkZWQ7XG4gICAgcHJpdmF0ZSBnZXRDb3VudGVyQnlQb3NpdGlvbjtcbiAgICBwcml2YXRlIGdldENvdW50ZXJJZEJ5UG9zaXRpb247XG59XG4iXX0=